# SPDX-FileCopyrightText: Digg - Agency for Digital Government
#
# SPDX-License-Identifier: CC0-1.0

---
# Configuration file for MegaLinter.
# See configuration options at https://oxsecurity.github.io/megalinter/configuration/ and more in each linter documentation.

PLUGINS:
  - file:///github/workspace/development/mega-linter-plugin-prettier-xml/prettier-xml.megalinter-descriptor.yml

# General
PRINT_ALPACA: false
APPLY_FIXES: all

DISABLE_ERRORS: false
FAIL_IF_UPDATED_SOURCES: true
FORMATTERS_DISABLE_ERRORS: false
SHOW_ELAPSED_TIME: true
SHOW_SKIPPED_LINTERS: false

# Reporter options
CLEAR_REPORT_FOLDER: true
EMAIL_REPORTER: false
TEXT_REPORTER: true
SARIF_REPORTER: true
GITHUB_COMMENT_REPORTER: true
GITHUB_STATUS_REPORTER: true
GITLAB_COMMENT_REPORTER: false
UPDATED_SOURCES_REPORTER: true

# Lint specific settings
ENABLE_LINTERS:
  [
    ACTION_ACTIONLINT,
    BASH_SHELLCHECK,
    BASH_SHFMT,
    JAVA_CHECKSTYLE,
    JAVA_PMD,
    MARKDOWN_MARKDOWNLINT,
    REPOSITORY_SECRETLINT,
    XML_XMLLINT,
    DIGG_XML_PRETTIER,
    YAML_PRETTIER,
  ]

DOCKERFILE_HADOLINT_FILE_NAMES_REGEX: ["Containerfile.*"]
BASH_SHFMT_ARGUMENTS: -i 2
BASH_SHFMT_FILE_EXTENSIONS: [.sh]
BASH_SHELLCHECK_FILE_EXTENSIONS: [.sh]
JAVA_CHECKSTYLE_CLI_EXECUTABLE:
  ["java", "-Dorg.checkstyle.google.severity=ERROR"]
JAVA_CHECKSTYLE_FILTER_REGEX_INCLUDE: src/main
JAVA_CHECKSTYLE_CONFIG_FILE: development/lint/google_checks.xml
JAVA_PMD_CONFIG_FILE: development/sast/pmd_default_java.xml
REPOSITORY_GITLEAKS_ARGUMENTS: detect --log-opts="main..HEAD"
# LOG_LEVEL: DEBUG # will show you the exact command run
PRE_COMMANDS:
  # Install node packages.
  # This is useful for custom plugins that require additional node packages.
  # For instance, the Prettier XML plugin requires 'prettier'
  # and '@prettier/plugin-xml'.
  # Please make sure they are in your package.json.
  - command: npm install --include=dev
    cwd: workspace
    continue_if_failed: false
